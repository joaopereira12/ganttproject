/*
 * This file is generated by jOOQ.
 */
package biz.ganttproject.storage.db;


import biz.ganttproject.storage.db.tables.Logrecord;
import biz.ganttproject.storage.db.tables.Task;
import biz.ganttproject.storage.db.tables.Taskcustomcolumn;
import biz.ganttproject.storage.db.tables.Taskdependency;
import biz.ganttproject.storage.db.tables.records.LogrecordRecord;
import biz.ganttproject.storage.db.tables.records.TaskRecord;
import biz.ganttproject.storage.db.tables.records.TaskcustomcolumnRecord;
import biz.ganttproject.storage.db.tables.records.TaskdependencyRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<LogrecordRecord> CONSTRAINT_A = Internal.createUniqueKey(Logrecord.LOGRECORD, DSL.name("CONSTRAINT_A"), new TableField[] { Logrecord.LOGRECORD.ID }, true);
    public static final UniqueKey<TaskRecord> CONSTRAINT_3 = Internal.createUniqueKey(Task.TASK, DSL.name("CONSTRAINT_3"), new TableField[] { Task.TASK.UID }, true);
    public static final UniqueKey<TaskcustomcolumnRecord> CONSTRAINT_9B = Internal.createUniqueKey(Taskcustomcolumn.TASKCUSTOMCOLUMN, DSL.name("CONSTRAINT_9B"), new TableField[] { Taskcustomcolumn.TASKCUSTOMCOLUMN.UID, Taskcustomcolumn.TASKCUSTOMCOLUMN.COLUMN_ID }, true);
    public static final UniqueKey<TaskdependencyRecord> CONSTRAINT_6 = Internal.createUniqueKey(Taskdependency.TASKDEPENDENCY, DSL.name("CONSTRAINT_6"), new TableField[] { Taskdependency.TASKDEPENDENCY.DEPENDEE_UID, Taskdependency.TASKDEPENDENCY.DEPENDANT_UID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TaskcustomcolumnRecord, TaskRecord> CONSTRAINT_9 = Internal.createForeignKey(Taskcustomcolumn.TASKCUSTOMCOLUMN, DSL.name("CONSTRAINT_9"), new TableField[] { Taskcustomcolumn.TASKCUSTOMCOLUMN.UID }, Keys.CONSTRAINT_3, new TableField[] { Task.TASK.UID }, true);
    public static final ForeignKey<TaskdependencyRecord, TaskRecord> CONSTRAINT_66 = Internal.createForeignKey(Taskdependency.TASKDEPENDENCY, DSL.name("CONSTRAINT_66"), new TableField[] { Taskdependency.TASKDEPENDENCY.DEPENDEE_UID }, Keys.CONSTRAINT_3, new TableField[] { Task.TASK.UID }, true);
    public static final ForeignKey<TaskdependencyRecord, TaskRecord> CONSTRAINT_66F = Internal.createForeignKey(Taskdependency.TASKDEPENDENCY, DSL.name("CONSTRAINT_66F"), new TableField[] { Taskdependency.TASKDEPENDENCY.DEPENDANT_UID }, Keys.CONSTRAINT_3, new TableField[] { Task.TASK.UID }, true);
}
