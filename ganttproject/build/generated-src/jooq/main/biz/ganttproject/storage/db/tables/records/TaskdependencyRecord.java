/*
 * This file is generated by jOOQ.
 */
package biz.ganttproject.storage.db.tables.records;


import biz.ganttproject.storage.db.tables.Taskdependency;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskdependencyRecord extends UpdatableRecordImpl<TaskdependencyRecord> implements Record5<String, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taskdependency.dependee_uid</code>.
     */
    public void setDependeeUid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskdependency.dependee_uid</code>.
     */
    public String getDependeeUid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>taskdependency.dependant_uid</code>.
     */
    public void setDependantUid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskdependency.dependant_uid</code>.
     */
    public String getDependantUid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taskdependency.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskdependency.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taskdependency.lag</code>.
     */
    public void setLag(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>taskdependency.lag</code>.
     */
    public Integer getLag() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>taskdependency.hardness</code>.
     */
    public void setHardness(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>taskdependency.hardness</code>.
     */
    public String getHardness() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Taskdependency.TASKDEPENDENCY.DEPENDEE_UID;
    }

    @Override
    public Field<String> field2() {
        return Taskdependency.TASKDEPENDENCY.DEPENDANT_UID;
    }

    @Override
    public Field<String> field3() {
        return Taskdependency.TASKDEPENDENCY.TYPE;
    }

    @Override
    public Field<Integer> field4() {
        return Taskdependency.TASKDEPENDENCY.LAG;
    }

    @Override
    public Field<String> field5() {
        return Taskdependency.TASKDEPENDENCY.HARDNESS;
    }

    @Override
    public String component1() {
        return getDependeeUid();
    }

    @Override
    public String component2() {
        return getDependantUid();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public Integer component4() {
        return getLag();
    }

    @Override
    public String component5() {
        return getHardness();
    }

    @Override
    public String value1() {
        return getDependeeUid();
    }

    @Override
    public String value2() {
        return getDependantUid();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public Integer value4() {
        return getLag();
    }

    @Override
    public String value5() {
        return getHardness();
    }

    @Override
    public TaskdependencyRecord value1(String value) {
        setDependeeUid(value);
        return this;
    }

    @Override
    public TaskdependencyRecord value2(String value) {
        setDependantUid(value);
        return this;
    }

    @Override
    public TaskdependencyRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public TaskdependencyRecord value4(Integer value) {
        setLag(value);
        return this;
    }

    @Override
    public TaskdependencyRecord value5(String value) {
        setHardness(value);
        return this;
    }

    @Override
    public TaskdependencyRecord values(String value1, String value2, String value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskdependencyRecord
     */
    public TaskdependencyRecord() {
        super(Taskdependency.TASKDEPENDENCY);
    }

    /**
     * Create a detached, initialised TaskdependencyRecord
     */
    public TaskdependencyRecord(String dependeeUid, String dependantUid, String type, Integer lag, String hardness) {
        super(Taskdependency.TASKDEPENDENCY);

        setDependeeUid(dependeeUid);
        setDependantUid(dependantUid);
        setType(type);
        setLag(lag);
        setHardness(hardness);
    }
}
