/*
 * This file is generated by jOOQ.
 */
package biz.ganttproject.storage.db.tables.records;


import biz.ganttproject.storage.db.tables.Taskcustomcolumn;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskcustomcolumnRecord extends UpdatableRecordImpl<TaskcustomcolumnRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taskcustomcolumn.uid</code>.
     */
    public void setUid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskcustomcolumn.uid</code>.
     */
    public String getUid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>taskcustomcolumn.column_id</code>.
     */
    public void setColumnId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskcustomcolumn.column_id</code>.
     */
    public String getColumnId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taskcustomcolumn.column_value</code>.
     */
    public void setColumnValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskcustomcolumn.column_value</code>.
     */
    public String getColumnValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Taskcustomcolumn.TASKCUSTOMCOLUMN.UID;
    }

    @Override
    public Field<String> field2() {
        return Taskcustomcolumn.TASKCUSTOMCOLUMN.COLUMN_ID;
    }

    @Override
    public Field<String> field3() {
        return Taskcustomcolumn.TASKCUSTOMCOLUMN.COLUMN_VALUE;
    }

    @Override
    public String component1() {
        return getUid();
    }

    @Override
    public String component2() {
        return getColumnId();
    }

    @Override
    public String component3() {
        return getColumnValue();
    }

    @Override
    public String value1() {
        return getUid();
    }

    @Override
    public String value2() {
        return getColumnId();
    }

    @Override
    public String value3() {
        return getColumnValue();
    }

    @Override
    public TaskcustomcolumnRecord value1(String value) {
        setUid(value);
        return this;
    }

    @Override
    public TaskcustomcolumnRecord value2(String value) {
        setColumnId(value);
        return this;
    }

    @Override
    public TaskcustomcolumnRecord value3(String value) {
        setColumnValue(value);
        return this;
    }

    @Override
    public TaskcustomcolumnRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskcustomcolumnRecord
     */
    public TaskcustomcolumnRecord() {
        super(Taskcustomcolumn.TASKCUSTOMCOLUMN);
    }

    /**
     * Create a detached, initialised TaskcustomcolumnRecord
     */
    public TaskcustomcolumnRecord(String uid, String columnId, String columnValue) {
        super(Taskcustomcolumn.TASKCUSTOMCOLUMN);

        setUid(uid);
        setColumnId(columnId);
        setColumnValue(columnValue);
    }
}
